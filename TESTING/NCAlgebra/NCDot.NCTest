<< NCSelfAdjoint`
<< NCSimplifyRational`

Module[
  {mat, mati, a, b, c, d, e, f, g, h, i, K, u, v, w, x},

  SetNonCommutative[a, b, c, d, e, f, g, h, i, K, u, v, w, x];

  (* tp *)

  NCTest[tpMat[{{1,2},{3,4}}], {{1,3},{2,4}}];
  NCTest[tp[{{1,2},{3,4}}], tpMat[{{1,2},{3,4}}]];
  NCTest[tpMat[{{a,b},{c,d}}], {{tp[a],tp[c]},{tp[b],tp[d]}}];
  NCTest[tp[{{a,b},{c,d}}], tpMat[{{a,b},{c,d}}]];

  (* aj *)

  NCTest[ajMat[{{1,2},{I 3,4}}], {{1,-I 3},{2,4}}];
  NCTest[aj[{{1,2},{I 3,4}}], ajMat[{{1,2},{I 3,4}}]];
  NCTest[ajMat[{{a,b},{c,d}}], {{aj[a],aj[c]},{aj[b],aj[d]}}];
  NCTest[aj[{{a,b},{c,d}}], ajMat[{{a,b},{c,d}}]];

  (* co *)

  NCTest[coMat[{{1,2},{I 3,4}}], {{1,2},{-I 3,4}}];
  NCTest[co[{{1,2},{I 3,4}}], coMat[{{1,2},{I 3,4}}]];
  NCTest[coMat[{{a,b},{c,d}}], {{co[a],co[b]},{co[c],co[d]}}];
  NCTest[co[{{a,b},{c,d}}], coMat[{{a,b},{c,d}}]];

  (* NCDot *)

  NCTest[NCDot[{{a, b},{c,d}}, {{u,v},{w,x}}], 
                 {{a**u+b**w, a**v+b**x}, 
                  {c**u+d**w, c**v+d**x}}];

  NCTest[NCDot[{{a, b},{c,d}}, 
                  {u,w}], 
                  {a**u+b**w, c**u+d**w}];

  NCTest[NCDot[{u,w}, {{a, b},{c,d}}], {u**a+w**c, u**b+w**d}];

  NCTest[NCDot[{u,v}, {w,x}], u**w+v**x];

  NCTest[NCDot[{{a, b},{c,d}}, {{1,0},{0,1}}, {{u,v},{w,x}}], 
                 {{a**u+b**w, a**v+b**x}, 
                  {c**u+d**w, c**v+d**x}}];

  NCTest[NCDot[{{a, b},{c,d}}, {{2,0},{0,-1}}, {{u,v},{w,x}}], 
                 {{2 a**u-b**w, 2 a**v-b**x}, 
                  {2 c**u-d**w, 2 c**v-d**x}}];

  NCTest[NCDot[{{a, b},{c,d}}, {{1,0},{0,1}}, 
                 {{2,0},{0,-1}}, {{u,v},{w,x}}], 
                 {{2 a**u-b**w, 2 a**v-b**x}, 
                  {2 c**u-d**w, 2 c**v-d**x}}];

  (* NCMatrixExpand *)

  NCTest[NCMatrixExpand[{{a, b},{c,d}}**{{u,v},{w,x}}], 
                 {{a**u+b**w, a**v+b**x}, 
                  {c**u+d**w, c**v+d**x}}];

  NCTest[NCMatrixExpand[{{a, b},{c,d}}**{u,w}], 
                  {a**u+b**w, c**u+d**w}];

  NCTest[NCMatrixExpand[{u,w}**{{a, b},{c,d}}], {u**a+w**c, u**b+w**d}];

  NCTest[NCMatrixExpand[{u,v}**{w,x}], u**w+v**x];

  NCTest[NCMatrixExpand[{{a, b},{c,d}}**{{1,0},{0,1}}**{{u,v},{w,x}}], 
                 {{a**u+b**w, a**v+b**x}, 
                  {c**u+d**w, c**v+d**x}}];

  NCTest[NCMatrixExpand[{{a, b},{c,d}}**{{2,0},{0,-1}}**{{u,v},{w,x}}], 
                 {{2 a**u-b**w, 2 a**v-b**x}, 
                  {2 c**u-d**w, 2 c**v-d**x}}];

  NCTest[NCMatrixExpand[{{a, b},{c,d}}**{{1,0},{0,1}}** 
                        {{2,0},{0,-1}}**{{u,v},{w,x}}], 
                        {{2 a**u-b**w, 2 a**v-b**x}, 
                         {2 c**u-d**w, 2 c**v-d**x}}];
  
  NCTest[NCMatrixExpand[{{u},{v}}**{{x}}], {{u**x},{v**x}}];

  NCTest[NCMatrixExpand[{{a},{b}}**{{x}}], {{a**x},{b**x}}];
  NCTest[NCMatrixExpand[{{x}}**{{c,d}}], {{x**c,x**d}}];

  NCTest[NCMatrixExpand[{{a}}**{{x}}**{{c}}], {{a**x**c}}];

  mat = NCMatrixExpand[{{a},{b}}**{{x}}**{{c,d}}];

  answer = {{(a**e+b)**x**(2 c-d), (a**e+b)**x**d},
            {b**x**(2 c-d), b**x**d}};
  NCTest[NCMatrixExpand[{{a**e+b},{b}}**{{x}}**{{2 c-d,d}}], answer];

  (* NCInverse *)

  mat = {{a,b,0},{tp[b],e,d},{0,tp[d],i}};
  mati = NCInverse[mat];
  
  (* TODO: TEST AFTER NCSIMPLIFYRATIONAL
  NCTest[NCSimplifyRational[NCDot[mati, mat]],
         {{1,0,0},{0,1,0},{0,0,1}}];
  *)

  (* NCInverse with NCMatrixExpand *)

  NCTest[inv[mat], inv[{{a,b,0},{tp[b],e,d},{0,tp[d],i}}]];

  NCTest[NCMatrixExpand[inv[mat]], mati];

  NCTest[inv[mat]**mati,
	 inv[{{a,b,0},{tp[b],e,d},{0,tp[d],i}}]**mati];

  NCTest[Norm[ExpandNonCommutativeMultiply[NCMatrixExpand[inv[mat]**mati] - NCDot[mati,mati]]], 0];

  (* NCSymmetricQ *)

  expr = {{a + tp[a]}};
  NCTest[NCSymmetricQ[expr, ExcludeVariables -> All], True];

  expr = {{a}};
  NCTest[NCSymmetricQ[expr, ExcludeVariables -> All], False];

  expr = {{a+tp[a],b},{tp[b],c+tp[c]}};
  NCTest[NCSymmetricQ[expr, ExcludeVariables -> All], True];

  expr = {{1,b},{tp[b],c+tp[c]}};
  NCTest[NCSymmetricQ[expr, ExcludeVariables -> All], True];

  expr = {{1,b},{tp[b],1}};
  NCTest[NCSymmetricQ[expr, ExcludeVariables -> All], True];

  expr = {{1,b},{b,1}};
  NCTest[NCSymmetricQ[expr, ExcludeVariables -> All], False];

  (* NCSymmetricQ[#, False] *)

  Quiet[

    expr = {{1,b},{b,1}};
    NCTest[NCSymmetricQ[expr], True];

    expr = {{a,b},{b,c}};
    NCTest[NCSymmetricQ[expr], True];

    expr = {{a,b},{tp[b],c}};
    NCTest[NCSymmetricQ[expr], True];

    expr = {{a,b},{tp[b],tp[a]}};
    NCTest[NCSymmetricQ[expr], False];

    ,
    NCSymmetricQ::SymmetricVariables
  ];

  (* NCSelfAdjointQ *)

  expr = {{a + aj[a]}};
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], True];

  expr = {{a}};
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False];

  expr = {{a+aj[a],b},{aj[b],c+aj[c]}};
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], True];

  expr = {{1,b},{aj[b],c+aj[c]}};
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], True];

  expr = {{1,b},{aj[b],1}};
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], True];

  expr = {{1,b},{b,1}};
  NCTest[NCSelfAdjointQ[expr, ExcludeVariables -> All], False];

  (* NCSelfAdjointQ[#, False] *)

  Quiet[

    expr = {{1,b},{b,1}};
    NCTest[NCSelfAdjointQ[expr], True];

    expr = {{a,b},{b,c}};
    NCTest[NCSelfAdjointQ[expr], True];

    expr = {{a,b},{aj[b],c}};
    NCTest[NCSelfAdjointQ[expr], True];

    expr = {{a,b},{aj[b],aj[a]}};
    NCTest[NCSelfAdjointQ[expr], False];

    expr = {{a,b},{tp[b],c}};
    NCTest[NCSelfAdjointQ[expr], True];

    expr = {{a,b},{tp[b],tp[a]}};
    NCTest[NCSelfAdjointQ[expr], False];

    expr = {{1,b},{tp[b],1}};
    NCTest[NCSelfAdjointQ[expr], True];

    expr = {{b,b},{tp[b],1}};
    NCTest[NCSelfAdjointQ[expr], False];

    expr = {{b+tp[b],b},{tp[b],1}};
    NCTest[NCSelfAdjointQ[expr], True];

    ,
    {NCSelfAdjointQ::SelfAdjointVariables, NCSymmetricQ::SymmetricVariables}
  ];

  (* Print["-------------------> " <> ToString[NCTest`Private`NCTestCounter]]; *)

];
