Block[
  {x,y,z,
   c1,m1,p1,
   c2,m2,p2,
   c3,m3,p3,
   c4,m4,p4,
   c5,m5,p5,
   p1p1,p1p2,p2p2,p2p1,
   p3p5,p5p3,p4p5,p5p4,
   isGraded
   },
  
  (* Test Product *)

  Clear[x, y];
  vars={{x,y}};

  (* p1 = x + x y + y x *)
  c1={1,1,1};
  m1={{x},{x,y},{y,x}};
  p1=NCPoly[c1,m1,vars];

  (* p2 = 1 + x + y x y *)
  c2={1,1,1};
  m2={{},{x},{y,x,y}};
  p2=NCPoly[c2,m2,vars];

  (* p3 = x y *)
  c3={1};
  m3={{x,y}};
  p3=NCPoly[c3,m3,vars];

  (* p4 = 2 y x *)
  c4={2};
  m4={{y,x}};
  p4=NCPoly[c4,m4,vars];

  (* p5 = x + 2 x y - y x *)
  c5={1,2,-1};
  m5={{x},{x,y},{y,x}};
  p5=NCPoly[c5,m5,vars];

  (*
     p1 ** p1 = x x + x x y + x y x + x y x + x y x y + x y y x + y x x + y x x y + y x y x
	      = x x + x x y + 2 x y x + x y x y + x y y x + y x x + y x x y + y x y x 
  *)
  p1p1=p1**p1;
  NCTest[Cases[NCPolyGetCoefficients[p1p1],Except[0]], {1, 1, 2, 1, 1, 1, 1, 1}];

  (* 
     p2 ** p2 = 1 + x + y x y + x + x x + x y x y + y x y + y x y x + y x y y x y
	      = 1 + 2 x + x x + 2 y x y + x y x y + y x y x + y x y y x y 
  *)
  p2p2=p2**p2;
  NCTest[Cases[NCPolyGetCoefficients[p2p2],Except[0]],{1, 2, 1, 2, 1, 1, 1}];

  (* 
     p1 ** p2 = (x + x y + y x)(1 + x + y x y)
	      = x + x x + x y + y x + x y x + y x x + x y x y + x y y x y + y x y x y
  *)

  p1p2=p1**p2;
  NCTest[Cases[NCPolyGetCoefficients[p1p2],Except[0]],{1, 1, 1, 1, 1, 1, 1, 1, 1}];

  (* 
     p2 ** p1 = (1 + x + y x y)(x + x y + y x)
	      = x + x x + x y + y x + x x y + x y x + y x y x + y x y x y + y x y y x
  *)

  p2p1=p2**p1;
  NCTest[Cases[NCPolyGetCoefficients[p2p1],Except[0]],{1, 1, 1, 1, 1, 1, 1, 1, 1}];

  (* Test multiplication by monomials *)

  (* p3 = x y *)
  (* p4 = 2 y x *)
  (* p5 = x + 2 x y - y x *)

  p3p5=p3**p5;
  NCTest[Cases[NCPolyGetCoefficients[p3p5],Except[0]],{1, 2, -1}];
  NCTest[Cases[NCPolyGetDigits[p3p5],Except[0]],{{0, 1, 0}, {0, 1, 0, 1}, {0, 1, 1, 0}}];

  p5p3=p5**p3;
  NCTest[Cases[NCPolyGetCoefficients[p5p3],Except[0]],{1, 2, -1}];
  NCTest[Cases[NCPolyGetDigits[p5p3],Except[0]],{{0, 0, 1}, {0, 1, 0, 1}, {1, 0, 0, 1}}];

  p4p5=p4**p5;
  NCTest[Cases[NCPolyGetCoefficients[p4p5],Except[0]],{2, 4, -2}];
  NCTest[Cases[NCPolyGetDigits[p4p5],Except[0]],{{1, 0, 0}, {1, 0, 0, 1}, {1, 0, 1,  0}}];

  p5p4=p5**p4;
  NCTest[Cases[NCPolyGetCoefficients[p5p4],Except[0]],{2, 4, -2}];
  NCTest[Cases[NCPolyGetDigits[p5p4],Except[0]],{{0, 1, 0}, {0, 1, 1, 0}, {1, 0, 1, 0}}];

  (* monomial product *)
  NCTest[NCPolyMonomialProduct[p3, p4], p3**p4];
  NCTest[NCPolyMonomialProduct[p4, p3], p4**p3];

  (* graded tests *)

  isGraded = (NCPolyOrderType[NCPolyMonomial[{1}, 1]] === NCPoly`NCPolyDegLexGraded);

  If[ !isGraded,
      Print["> Class does not support graded ordering. Skipping tests..."];
      Return[]
  ];

  vars={{x},{y}};

  (* p1 = x + x y + y x *)
  c1={1,1,1};
  m1={{x},{x,y},{y,x}};
  p1=NCPoly[c1,m1,vars];

  (* p2 = 1 + x + y x y *)
  c2={1,1,1};
  m2={{},{x},{y,x,y}};
  p2=NCPoly[c2,m2,vars];

  (* p3 = x y *)
  c3={1};
  m3={{x,y}};
  p3=NCPoly[c3,m3,vars];

  (* p4 = 2 y x *)
  c4={2};
  m4={{y,x}};
  p4=NCPoly[c4,m4,vars];

  (* p5 = x + 2 x y - y x *)
  c5={1,2,-1};
  m5={{x},{x,y},{y,x}};
  p5=NCPoly[c5,m5,vars];

  p1p1=p1**p1;
  NCTest[Cases[NCPolyGetCoefficients[p1p1],Except[0]], {1, 1, 2, 1, 1, 1, 1, 1}];

  p2p2=p2**p2;
  NCTest[Cases[NCPolyGetCoefficients[p2p2],Except[0]],{1, 2, 1, 2, 1, 1, 1}];

  p1p2=p1**p2;
  NCTest[Cases[NCPolyGetCoefficients[p1p2],Except[0]],{1, 1, 1, 1, 1, 1, 1, 1, 1}];

  p2p1=p2**p1;
  NCTest[Cases[NCPolyGetCoefficients[p2p1],Except[0]],{1, 1, 1, 1, 1, 1, 1, 1, 1}];

  p3p5=p3**p5;
  NCTest[Cases[NCPolyGetCoefficients[p3p5],Except[0]],{1, 2, -1}];
  NCTest[Cases[NCPolyGetDigits[p3p5],Except[0]],{{0, 1, 0}, {0, 1, 0, 1}, {0, 1, 1, 0}}];

  p5p3=p5**p3;
  NCTest[Cases[NCPolyGetCoefficients[p5p3],Except[0]],{1, 2, -1}];
  NCTest[Cases[NCPolyGetDigits[p5p3],Except[0]],{{0, 0, 1}, {0, 1, 0, 1}, {1, 0, 0, 1}}];

  p4p5=p4**p5;
  NCTest[Cases[NCPolyGetCoefficients[p4p5],Except[0]],{2, 4, -2}];
  NCTest[Cases[NCPolyGetDigits[p4p5],Except[0]],{{1, 0, 0}, {1, 0, 0, 1}, {1, 0, 1,  0}}];

  p5p4=p5**p4;
  NCTest[Cases[NCPolyGetCoefficients[p5p4],Except[0]],{2, 4, -2}];
  NCTest[Cases[NCPolyGetDigits[p5p4],Except[0]],{{0, 1, 0}, {0, 1, 1, 0}, {1, 0, 1, 0}}];

];