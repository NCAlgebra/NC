Block[
  {x,y,
   c1,m1,p1,
   c2,m2,p2,
   c3,m3,p3,
   q,r,
   f,g,h,c,m,G,
   g1,g2,g1p,
   isGraded,answer,gb,
   A, B, d
  },
  
  (* Test Reduction *)

  Clear[x, y];
  vars={{x,y}};

  (* p1 = x + x y + x y x x *)
  c1={1,1, 1};
  m1={{x},{x,y},{x,y,x,x}};
  p1=NCPoly[c1,m1,vars];

  {q,r} = NCPolyReduceWithQuotient[p1,p1];
  NCTest[p1 - NCPolyQuotientExpand[q,p1] - r, 0];
  NCTest[r, 0];

  r = NCPolyReduce[p1,p1];
  NCTest[r, 0];

  {q,r} = NCPolyReduceWithQuotient[p1**p1,p1];
  NCTest[p1**p1 -NCPolyQuotientExpand[q,p1]-r, 0];
  NCTest[r, 0];

  r=NCPolyReduce[p1**p1,p1];
  NCTest[r, 0];
  
  (* p2 = x - 2 y x *)
  c2={1,-2};
  m2={{x},{y,x}};
  p2=NCPoly[c2,m2,vars];

  (* p1 = x + x y + x y x x *)
  (* p2 = x - 2 y x *)
  (* p1 = (-1/2) q1 p2 q2 + r *)
  (* q1 = q2 = x *)
  (* r = x y x x + x y + x + x x x / 2 - x y x x *)
  (* r = x + x y + x x x / 2 *)

  {q,r} = NCPolyReduceWithQuotient[p1, p2];
  NCTest[p1 - NCPolyQuotientExpand[q,p2] - r, 0];
  NCTest[NCPolyGetCoefficients[r], {1, 1, 1/2}];

  r = NCPolyReduce[p1, p2];
  NCTest[NCPolyGetCoefficients[r], {1, 1, 1/2}];

  (* An example that does not divide! *)

  {q,r} = NCPolyReduceWithQuotient[p2,p1];
  NCTest[p2 - NCPolyQuotientExpand[q,p1]-r, 0];
  NCTest[r, p2];
  NCTest[q, {}];

  r=NCPolyReduce[p2,p1];
  NCTest[r, p2];
  
  (* Complete x Incomplete Reduction *)

  (* p3 = x + x y + x y x x + x x x x *)
  (* p2 = x - 2 y x *)
  p3 = p1 + NCPolyMonomial[{1,1,1,1}, 2];

  (* p3 / p2 = x + x y + x y x x + x x x x *)
  {q,r} = NCPolyReduceWithQuotient[p3,{p2},Complete->False];
  NCTest[p3 -NCPolyQuotientExpand[q,p2]-r, 0];
  NCTest[r, p3];
  NCTest[q, {}];

  r = NCPolyReduce[p3,p2,Complete->False];
  NCTest[r, p3];
  
  (* p3 / p2 = x + x y + (1/2) x x x + x x x x *)
  {q,r} = NCPolyReduceWithQuotient[p3,{p2},Complete->True];
  NCTest[p3 -NCPolyQuotientExpand[q,{p2}]-r, 0];
  NCTest[NCPolyGetCoefficients[r], {1, 1, 1/2, 1}];

  r = NCPolyReduce[p3,{p2},Complete->True];
  NCTest[NCPolyGetCoefficients[r], {1, 1, 1/2, 1}];

  (* List Reduction #1 *)

  f = NCPolyMonomial[{x,y,y},vars] - NCPolyMonomial[{x,x,y},vars];
  g = NCPolyMonomial[{y,x,y},vars] - NCPolyMonomial[{y},vars];

  {q,r} = NCPolyReduceWithQuotient[f,g,Complete->True];
  NCTest[f - NCPolyQuotientExpand[q,g] - r, 0];
  NCTest[NCPolyGetCoefficients[r], {-1, 1}];

  r = NCPolyReduce[f,g,Complete->True];
  NCTest[NCPolyGetCoefficients[r], {-1, 1}];
  
  c3={1,1,1};
  m3={{x,x,y},{y,x,y},{y,y}};
  f=NCPoly[c3,m3,vars];

  c={1,-1};
  m={{x,y},{}};
  g1=NCPoly[c,m,vars];

  c={1,-1};
  m={{y,y},{}};
  g2=NCPoly[c,m,vars];

  {q,r} = NCPolyReduceWithQuotient[f,{g1,g2}];
  NCTest[f -NCPolyQuotientExpand[q,{g1,g2}]-r, 0];
  NCTest[NCPolyGetCoefficients[r], {1,1,1}];

  r = NCPolyReduce[f,{g1,g2}];
  NCTest[NCPolyGetCoefficients[r], {1,1,1}];

  f=NCPolyMonomial[{3,3}->1,2]-NCPolyMonomial[{1,0}->1,2];
  g1p=g1+NCPolyMonomial[{0,0}->2,2];

  {q,r} = NCPolyReduceWithQuotient[f,{g1p,g2}];
  NCTest[f -NCPolyQuotientExpand[q,{g1p,g2}]-r, 0];
  NCTest[NCPolyGetCoefficients[r], {-1,-1}];

  r = NCPolyReduce[f,{g1p,g2}];
  NCTest[NCPolyGetCoefficients[r], {-1,-1}];
  
  {q,r} = NCPolyReduceWithQuotient[f,{g2,g1p},Complete->True];
  NCTest[f -NCPolyQuotientExpand[q,{g2,g1p}]-r, 0];
  NCTest[r, 0];

  r = NCPolyReduce[f,{g2,g1p},Complete->True];
  NCTest[r, 0];
  
  (* List Reduction #2 *)

  r = NCPolyReduce[{g1,g2},{g1,g2}];
  NCTest[r, {}];

  r = NCPolyReduce[{g1,g2,g1p},{g1,g2}];
  NCTest[r, {NCPolyMonomial[{0,0}->2,2]}];

  (* Reduction with 1 *)

  f = NCPolyMonomial[{x,y,y},vars] - NCPolyMonomial[{x,x,y},vars];
  g = NCPolyMonomial[{y,x,y},vars] - NCPolyMonomial[{y},vars];
  h = NCPolyConstant[1,2];

  G = {f,g,h};
  G = NCPolyReduce[G];
  NCTest[Length[G], 1];
  NCTest[G[[1]]-h, 0];

  (* graded tests *)

  isGraded = (NCPolyOrderType[NCPolyMonomial[{1}, 1]] === NCPoly`NCPolyDegLexGraded);

  If[ !isGraded,
      Print["> Class does not support graded ordering. Skipping tests..."];
      Return[]
  ];

  vars={{x},{y}};

  (* p1 = x + x y + x y x x *)
  c1={1,1, 1};
  m1={{x},{x,y},{x,y,x,x}};
  p1=NCPoly[c1,m1,vars];

  {q,r} = NCPolyReduceWithQuotient[p1,p1];
  NCTest[p1 - NCPolyQuotientExpand[q,p1] - r, 0];
  NCTest[r, 0];

  r = NCPolyReduce[p1,p1];
  NCTest[r, 0];

  {q,r} = NCPolyReduceWithQuotient[p1**p1,p1];
  NCTest[p1**p1 -NCPolyQuotientExpand[q,p1]-r, 0];
  NCTest[r, 0];

  r = NCPolyReduce[p1**p1,p1];
  NCTest[r, 0];

  (* p2 = x - 2 y x *)
  c2={1,-2};
  m2={{x},{y,x}};
  p2=NCPoly[c2,m2,vars];

  (* p1 = (-1/2) q1 p2 q2 + r *)
  (* q1 = q2 = x *)
  (* r = x y x x + x y + x + x x x / 2 - x y x x *)
  (* r = x + x x x / 2 + x y *)

  {q,r} = NCPolyReduceWithQuotient[p1,p2];
  NCTest[p1 - NCPolyQuotientExpand[q,p2]-r, 0];
  NCTest[NCPolyGetCoefficients[r], {1, 1/2, 1}];

  r = NCPolyReduce[p1,p2];
  NCTest[NCPolyGetCoefficients[r], {1, 1/2, 1}];
  
  (* An example that does not divide! *)

  {q,r} = NCPolyReduceWithQuotient[p2,p1];
  NCTest[p2 - NCPolyQuotientExpand[q,p1]-r, 0];
  NCTest[r, p2];
  NCTest[q, {}];

  r = NCPolyReduce[p2,p1];
  NCTest[r, p2];
  
  (* Complete x Incomplete Reduction *)

  p3 = p1 + NCPolyMonomial[{1,1,1,1}, {1,1}];

  {q,r} = NCPolyReduceWithQuotient[p3,p2,Complete->False];
  NCTest[p3 -NCPolyQuotientExpand[q,p2]-r, 0];
  NCTest[r, p3];
  NCTest[q, {}];

  r = NCPolyReduce[p3,p2,Complete->False];
  NCTest[r, p3];

  {q,r} = NCPolyReduceWithQuotient[p3,{p2},Complete->True];
  NCTest[p3 -NCPolyQuotientExpand[q,{p2}]-r, 0];
  NCTest[NCPolyGetCoefficients[r], {1, 1/2, 1, 1}];

  r = NCPolyReduce[p3,{p2},Complete->True];
  NCTest[NCPolyGetCoefficients[r], {1, 1/2, 1, 1}];
  
  (* List Reduction #1 *)

  f = NCPolyMonomial[{x,y,y},vars] - NCPolyMonomial[{x,x,y},vars];
  g = NCPolyMonomial[{y,x,y},vars] - NCPolyMonomial[{y},vars];

  {q,r} = NCPolyReduceWithQuotient[f,g,Complete->True];
  NCTest[f - NCPolyQuotientExpand[q,g] - r, 0];
  NCTest[NCPolyGetCoefficients[r], {-1, 1}];

  r = NCPolyReduce[f,g,Complete->True];
  NCTest[NCPolyGetCoefficients[r], {-1, 1}];
  
  c3={1,1,1};
  m3={{x,x,y},{y,x,y},{y,y}};
  f=NCPoly[c3,m3,vars];

  c={1,-1};
  m={{x,y},{}};
  g1=NCPoly[c,m,vars];

  c={1,-1};
  m={{y,y},{}};
  g2=NCPoly[c,m,vars];

  {q,r} = NCPolyReduceWithQuotient[f,{g1,g2}];
  NCTest[f -NCPolyQuotientExpand[q,{g1,g2}]-r, 0];
  NCTest[NCPolyGetCoefficients[r], {1,1,1}];

  r = NCPolyReduce[f,{g1,g2}];
  NCTest[NCPolyGetCoefficients[r], {1,1,1}];
  
  f=NCPolyMonomial[{3,3}->1,{1,1}]-NCPolyMonomial[{1,0}->1,{1,1}];
  g1p=g1+NCPolyMonomial[{0,0}->2,{1,1}];

  {q,r} = NCPolyReduceWithQuotient[f,{g1p,g2}];
  NCTest[f -NCPolyQuotientExpand[q,{g1p,g2}]-r, 0];
  NCTest[NCPolyGetCoefficients[r], {-1,-1}];

  r = NCPolyReduce[f,{g1p,g2}];
  NCTest[NCPolyGetCoefficients[r], {-1,-1}];
  
  {q,r} = NCPolyReduceWithQuotient[f,{g2,g1p},Complete->True];
  NCTest[f -NCPolyQuotientExpand[q,{g2,g1p}]-r, 0];
  NCTest[r, 0];

  r = NCPolyReduce[f,{g2,g1p},Complete->True];
  NCTest[r, 0];
  
  (* List Reduction #2 *)

  r = NCPolyReduce[{g1,g2},{g1,g2}];
  NCTest[r, {}];

  r = NCPolyReduce[{g1,g2,g1p},{g1,g2}];
  NCTest[r, {NCPolyMonomial[{0,0}->2,{1,1}]}];

  (* Reduction with 1 *)

  f = NCPolyMonomial[{x,y,y},vars] - NCPolyMonomial[{x,x,y},vars];
  g = NCPolyMonomial[{y,x,y},vars] - NCPolyMonomial[{y},vars];
  h = NCPolyConstant[1,{1,1}];

  G = {f,g,h};
  G = NCPolyReduce[G];
  NCTest[Length[G], 1];
  NCTest[G[[1]]-h, 0];

  (* Complete reduction *)
  Clear[A,B,c,d];
  vars = {{A, B}, {c}, {d}};
  g = {NCPoly[{1}, {{A,A}}, vars], NCPoly[{1,1,1}, {{A,A},{B,B},{c,c}}, vars]};
  gg = NCPolyReduce[g,Complete->True];
  NCTest[gg, {NCPoly[{1}, {{A,A}}, vars], NCPoly[{1,1}, {{B,B},{c,c}}, vars]}];

  (* Reduction with complex coefficients *)
  (* Eric's example *)
  g1 = {NCPoly[{2,2,1,1,2},<|{0,0,0,0,1,1}->1,{0,0,1,0,0,4}->-1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,0,3}->1,{0,1,0,0,0,5}->-1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,1,2}->1,{0,0,0,1,1,16}->1/2-(I Sqrt[3])/2|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,0,0,0,3,0}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,2,2}->1,{0,0,0,1,2,128}->1/2+(I Sqrt[3])/2|>],NCPoly[{2,2,1,1,2},<|{0,0,0,2,1,18}->1,{0,0,0,2,1,144}->1/2+(I Sqrt[3])/2|>]};
  g2 = NCPolyNormalize[NCPolyReduce[g1]];
  answer = List[NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 1, 1], -1], Rule[List[0, 0, 1, 0, 0, 4], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 1, 0, 3], -1], Rule[List[0, 1, 0, 0, 0, 5], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 1, 1, 2], Power[Plus[Rational[1, 2], Times[Complex[0, Rational[-1, 2]], Power[3, Rational[1, 2]]]], -1]], Rule[List[0, 0, 0, 1, 1, 16], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 0, 3, 0], 1]]]];
  NCTest[g2,answer];

  g1 = {NCPoly[{2,2,1,1,2},<|{0,0,0,0,1,1}->1,{0,0,1,0,0,4}->-1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,0,3}->1,{0,1,0,0,0,5}->-1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,1,2}->1,{0,0,0,1,1,16}->1/2-(I Sqrt[3])/2|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,0,0,0,3,0}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,2,2}->1,{0,0,0,1,2,128}->1/2+(I Sqrt[3])/2|>],NCPoly[{2,2,1,1,2},<|{0,0,0,2,1,18}->1,{0,0,0,2,1,144}->1/2+(I Sqrt[3])/2|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,0,0,3,0,146}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,2,2,18}->1,{0,0,0,2,2,1152}->1/2-(I Sqrt[3])/2|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,1,0}->1,{1,0,0,0,0,6}->-1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,0,2}->1,{1,0,0,0,0,7}->-1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,1,11}->1/2+(I Sqrt[3])/2,{0,0,0,1,1,25}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,0,0,0,3,73}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,1,2,75}->1/2-(I Sqrt[3])/2,{0,0,0,1,2,201}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,2,1,91}->1/2-(I Sqrt[3])/2,{0,0,0,2,1,217}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,0,0,3,0,219}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,2,2,603}->1/2+(I Sqrt[3])/2,{0,0,0,2,2,1737}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,0,1,0,1,32}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,0,1,0,1,4}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,1,0,1,0,42}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{0,1,0,1,0,21}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{1,0,0,0,1,49}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{1,0,0,0,1,14}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{1,0,0,1,0,59}->1|>],NCPoly[{2,2,1,1,2},<|{0,0,0,0,0,0}->-1,{1,0,0,1,0,31}->1|>]};
  g2 = NCPolyNormalize[NCPolyReduce[g1]];
  answer = List[NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 1, 1], -1], Rule[List[0, 0, 1, 0, 0, 4], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 1, 0, 3], -1], Rule[List[0, 1, 0, 0, 0, 5], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 1, 1, 2], Power[Plus[Rational[1, 2], Times[Complex[0, Rational[-1, 2]], Power[3, Rational[1, 2]]]], -1]], Rule[List[0, 0, 0, 1, 1, 16], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 0, 3, 0], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 3, 0, 146], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 1, 0], -1], Rule[List[1, 0, 0, 0, 0, 6], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 1, 0, 2], -1], Rule[List[1, 0, 0, 0, 0, 7], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 1, 1, 11], Plus[Rational[1, 2], Times[Complex[0, Rational[1, 2]], Power[3, Rational[1, 2]]]]], Rule[List[0, 0, 0, 1, 1, 25], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 0, 3, 73], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 3, 0, 219], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 0, 2, 8], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 0, 2, 1], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 2, 0, 26], 1]]], NCPoly[List[2, 2, 1, 1, 2], Association[Rule[List[0, 0, 0, 0, 0, 0], -1], Rule[List[0, 0, 0, 2, 0, 19], 1]]]];
  NCTest[g2,answer];

  p1=NCPoly[{12}, <|{0, 0} -> 0.00731212, {2, 0} -> 
   0.0260416, {2, 1} -> -0.00220959, {2, 12} -> -0.00220959, {2, 
    13} -> 0.0548901, {2, 26} -> 
   0.00668245, {2, 27} -> -0.00151226, {2, 38} -> -0.00151226, {2, 
    39} -> 0.0376752, {2, 52} -> 
   0.00587922, {2, 53} -> -0.00264539, {2, 55} -> -0.00128502, {2, 
    64} -> -0.00264539, {2, 65} -> 0.0240532, {2, 67} -> 
   0.00170568, {2, 78} -> 
   0.0413948, {2, 88} -> -0.00128502, {2, 89} -> 
   0.00170568, {2, 91} -> 0.0288399, {2, 104} -> 
   0.0391634, {2, 106} -> -0.00431485, {2, 107} -> 
   0.00400297, {2, 117} -> 
   0.00760121, {2, 128} -> -0.00431485, {2, 130} -> 
   0.0406984, {2, 131} -> 0.00188569, {2, 140} -> 
   0.00400297, {2, 142} -> 0.00188569, {2, 143} -> 
   0.0343949, {3, 56} -> -0.000204215, {3, 58} -> -0.000242167, {3, 
    59} -> 0.000487194, {3, 68} -> -0.00270394, {3, 
    70} -> -0.0268826, {3, 71} -> -0.00493465, {3, 92} -> 
   0.0282878, {3, 94} -> -0.0267842, {3, 95} -> 0.0286713, {3, 100} ->
    0.000204215, {3, 101} -> 0.00270394, {3, 103} -> 
   0.0101737, {3, 124} -> 
   0.000242167, {3, 125} -> -0.0115789, {3, 127} -> -0.0116774, {3, 
    136} -> -0.000487194, {3, 137} -> 0.00493465, {3, 139} -> 
   0.00979023, {3, 200} -> 0.0335145, {3, 202} -> 
   0.0000477072, {3, 203} -> -0.0323391, {3, 212} -> 
   0.0316684, {3, 214} -> 0.0320099, {3, 215} -> 
   0.0293126, {3, 236} -> -0.00144865, {3, 238} -> -0.00148098, {3, 
    239} -> -0.00141687, {3, 244} -> 0.00494702, {3, 245} -> 
   0.00679317, {3, 247} -> 
   0.00144865, {3, 268} -> -0.0000477072, {3, 269} -> 
   0.00645163, {3, 271} -> 
   0.00148098, {3, 280} -> -0.00612245, {3, 281} -> 
   0.00914895, {3, 283} -> 
   0.00141687, {3, 345} -> -0.00011613, {3, 357} -> 
   0.000325759, {3, 368} -> 
   0.021042, {3, 370} -> -0.00108185, {3, 371} -> 
   0.000635217, {3, 381} -> 0.000410767, {3, 390} -> 
   0.0174195, {3, 400} -> 
   0.00011613, {3, 401} -> -0.000325759, {3, 403} -> -0.000410767, {3,
     414} -> 
   0.00108185, {3, 426} -> -0.000635217, {3, 489} -> -0.000432503, {3,
     501} -> 0.000765485, {3, 512} -> 
   0.000302957, {3, 514} -> -0.0260089, {3, 515} -> -0.0254356, {3, 
    525} -> -0.0248912, {3, 534} -> -0.000302957, {3, 544} -> 
   0.000432503, {3, 545} -> -0.000765485, {3, 547} -> -0.0135704, {3, 
    558} -> -0.0124526, {3, 570} -> -0.013026, {3, 584} -> 
   0.000204215, {3, 586} -> 
   0.000242167, {3, 587} -> -0.000487194, {3, 596} -> 
   0.00494702, {3, 598} -> -0.0000477072, {3, 599} -> -0.00612245, {3,
     609} -> 0.00011613, {3, 621} -> 
   0.000432503, {3, 672} -> -0.000301532, {3, 673} -> 
   0.0251994, {3, 686} -> -0.0000445613, {3, 687} -> -0.000563249, {3,
     696} -> 0.000172713, {3, 697} -> 0.00280375, {3, 708} -> 
   0.000677237, {3, 709} -> -0.0241499, {3, 728} -> 
   0.00270394, {3, 730} -> -0.0115789, {3, 731} -> 
   0.00493465, {3, 740} -> 0.00679317, {3, 742} -> 
   0.00645163, {3, 743} -> 
   0.00914895, {3, 753} -> -0.000325759, {3, 765} -> -0.000765485, {3,
     816} -> -0.00314707, {3, 817} -> 0.0161057, {3, 830} -> 
   0.000131561, {3, 831} -> 
   0.000403043, {3, 840} -> -0.0112769, {3, 841} -> 
   0.0139702, {3, 852} -> -0.0033658, {3, 853} -> 
   0.0128398, {3, 896} -> 0.0174195, {3, 898} -> 
   0.00108185, {3, 899} -> -0.000635217, {3, 908} -> -0.000302957, {3,
     910} -> -0.0124526, {3, 911} -> -0.013026, {3, 962} -> 
   0.0068619, {3, 963} -> 
   0.00020457, {3, 986} -> -0.0000781342, {3, 987} -> -0.011547, {3, 
    998} -> -0.000226955, {3, 999} -> -0.0105684, {3, 1016} -> 
   0.0101737, {3, 1018} -> -0.0116774, {3, 1019} -> 
   0.00979023, {3, 1028} -> 0.00144865, {3, 1030} -> 
   0.00148098, {3, 1031} -> 
   0.00141687, {3, 1041} -> -0.000410767, {3, 1053} -> -0.0135704, {3,
     1104} -> 0.0103526, {3, 1105} -> -0.00284319, {3, 1118} -> 
   0.000214835, {3, 1119} -> -0.0171565, {3, 1128} -> -0.00917283, {3,
     1129} -> 0.00199964, {3, 1140} -> 
   0.0112363, {3, 1141} -> -0.00314746, {3, 1156} -> 
   0.000097317, {3, 1157} -> 0.000443131, {3, 1159} -> 
   0.0179352, {3, 1168} -> 0.00831515, {3, 1169} -> 
   0.0155626, {3, 1171} -> 0.00139454, {3, 1182} -> 
   0.0141801, {3, 1194} -> 
   0.0000983864, {3, 1324} -> -0.0000715685, {3, 1325} -> 
   0.000194198, {3, 1327} -> 0.000195932, {3, 1336} -> 
   0.000130746, {3, 1337} -> 
   0.000362442, {3, 1339} -> -0.00773466, {3, 
    1444} -> -0.00041488, {3, 1445} -> -0.0156057, {3, 
    1447} -> -0.0176114, {3, 1456} -> -0.00275604, {3, 1457} -> 
   0.0180397, {3, 1459} -> -0.00348062, {3, 1470} -> -0.00100372, {3, 
    1482} -> -0.0144619, {3, 1588} -> -0.000190043, {3, 
    1589} -> -0.00156885, {3, 1591} -> 
   0.017435, {3, 1600} -> -0.00818922, {3, 1601} -> 
   0.0164728, {3, 1603} -> 0.00173058, {3, 1614} -> 
   0.000862172, {3, 1626} -> -0.0148672, {4, 156} -> 
   0.00316989, {4, 197} -> -0.000179424, {4, 199} -> 
   0.0000525708, {4, 208} -> -0.000515357, {4, 
    211} -> -0.00063978, {4, 232} -> -0.000458107, {4, 
    233} -> -0.000748066, {4, 250} -> -0.000198927, {4, 
    251} -> -0.000487445, {4, 272} -> 0.000964633, {4, 275} -> 
   0.00124115, {4, 284} -> -0.000832666, {4, 286} -> -0.000646502, {4,
     312} -> 0.00162252, {4, 313} -> 
   0.001065, {4, 342} -> -0.000176277, {4, 354} -> -0.000593738, {4, 
    378} -> -0.0014802, {4, 393} -> 0.000121597, {4, 417} -> 
   0.000230649, {4, 429} -> 0.000364878, {4, 468} -> 
   0.0036641, {4, 469} -> 0.000168595, {4, 486} -> 
   0.0000986658, {4, 498} -> -0.00170603, {4, 522} -> 
   0.000581224, {4, 537} -> 
   0.0014113, {4, 561} -> -0.000726454, {4, 573} -> 
   0.000834727, {4, 580} -> 0.000492428, {4, 581} -> 
   0.000407323, {4, 583} -> 0.000310157, {4, 592} -> 
   0.000696025, {4, 593} -> -0.0000374341, {4, 
    595} -> -5.883*10^-6, {4, 606} -> -0.00020367, {4, 
    618} -> -0.000330507, {4, 724} -> 0.000407323, {4, 725} -> 
   0.00775069, {4, 727} -> 0.00574012, {4, 736} -> 
   0.000773407, {4, 737} -> -0.00633643, {4, 739} -> 
   0.00115947, {4, 750} -> 0.000145124, {4, 762} -> 
   0.00383361, {4, 1012} -> 0.000310157, {4, 1013} -> 
   0.00574012, {4, 1015} -> 0.0261843, {4, 1024} -> 
   0.000686279, {4, 1025} -> 0.001238, {4, 1027} -> 
   0.00455397, {4, 1038} -> 
   0.00294563, {4, 1050} -> -0.00163687, {4, 1160} -> 
   0.00537728, {4, 1162} -> -0.00478908, {4, 1163} -> 
   0.00399451, {4, 1172} -> 0.00174923, {4, 1174} -> 
   0.000573904, {4, 1175} -> 
   0.000142408, {4, 1185} -> -0.000179843, {4, 
    1197} -> -0.00347719, {4, 1448} -> -0.00478908, {4, 1450} -> 
   0.0135407, {4, 1451} -> -0.00658035, {4, 1460} -> -0.00191878, {4, 
    1462} -> -0.00204204, {4, 1463} -> -0.00261758, {4, 
    1473} -> -0.000390973, {4, 1485} -> 0.00302178, {4, 1592} -> 
   0.00399451, {4, 1594} -> -0.00658035, {4, 1595} -> 
   0.00559332, {4, 1604} -> 0.00099462, {4, 1606} -> 
   0.000772156, {4, 1607} -> 
   0.00235523, {4, 1617} -> -0.000598126, {4, 
    1629} -> -0.00317088, {4, 1729} -> 
   0.00295538, {4, 1781} -> -0.00025805, {4, 
    1783} -> -0.000228172, {4, 1792} -> 
   0.000216858, {4, 1795} -> -0.000489932, {4, 
    1816} -> -0.0000466878, {4, 1817} -> -0.000519693, {4, 1834} -> 
   0.000954149, {4, 1835} -> -0.000161954, {4, 
    1856} -> -0.000374977, {4, 1859} -> -0.000125653, {4, 1868} -> 
   0.000345037, {4, 1870} -> 0.00137643, {4, 2040} -> 
   0.001065, {4, 2041} -> 
   0.00259234, {4, 2070} -> -0.00132516, {4, 2082} -> -0.00192905, {4,
     2106} -> -0.000485818, {4, 2121} -> 0.000109501, {4, 2145} -> 
   0.000101747, {4, 2157} -> 0.000320166, {4, 2196} -> 
   0.000168595, {4, 2197} -> 
   0.00408415, {4, 2214} -> -0.00141269, {4, 2226} -> 
   0.00287633, {4, 2250} -> 0.000274739, {4, 2265} -> 
   0.0000410112, {4, 2289} -> 0.0000376237, {4, 2301} -> 
   0.00027449, {4, 2308} -> 0.000696025, {4, 2309} -> 
   0.000773407, {4, 2311} -> 0.000686279, {4, 2320} -> 
   0.00738394, {4, 2321} -> -0.000919131, {4, 2323} -> 
   0.0000457849, {4, 2334} -> 0.00231747, {4, 2346} -> 
   0.00285456, {4, 2452} -> -0.0000374341, {4, 
    2453} -> -0.00633643, {4, 2455} -> 
   0.001238, {4, 2464} -> -0.000919131, {4, 2465} -> 
   0.0244865, {4, 2467} -> -0.00195293, {4, 2478} -> 
   0.00377243, {4, 2490} -> -0.0065282, {4, 2740} -> -5.883*10^-6, {4,
     2741} -> 0.00115947, {4, 2743} -> 0.00455397, {4, 2752} -> 
   0.0000457849, {4, 2753} -> -0.00195293, {4, 2755} -> 
   0.00157907, {4, 2766} -> 
   0.0000478218, {4, 2778} -> -0.0000721853, {4, 2888} -> 
   0.00174923, {4, 2890} -> -0.00191878, {4, 2891} -> 
   0.00099462, {4, 2900} -> 0.00782847, {4, 2902} -> 
   0.00233609, {4, 2903} -> -0.00230991, {4, 
    2913} -> -0.000116134, {4, 2925} -> -0.000182248, {4, 3176} -> 
   0.000573904, {4, 3178} -> -0.00204204, {4, 3179} -> 
   0.000772156, {4, 3188} -> 0.00233609, {4, 3190} -> 
   0.0029665, {4, 3191} -> 
   0.00173819, {4, 3201} -> -0.000175841, {4, 
    3213} -> -0.000228969, {4, 3320} -> 
   0.000142408, {4, 3322} -> -0.00261758, {4, 3323} -> 
   0.00235523, {4, 3332} -> -0.00230991, {4, 3334} -> 
   0.00173819, {4, 3335} -> 
   0.0108721, {4, 3345} -> -0.000428801, {4, 3357} -> -0.00064292, {4,
     3458} -> 0.00133843, {4, 3459} -> -0.000246439, {4, 3532} -> 
   0.000379947, {4, 3533} -> 
   0.000448614, {4, 3535} -> -0.00146543, {4, 3572} -> 
   0.0000582465, {4, 3574} -> 0.000160324, {4, 3575} -> 
   0.000233248, {4, 3614} -> 
   0.00193301, {4, 3615} -> -0.00033725, {4, 
    3676} -> -0.000992313, {4, 3677} -> -0.00184337, {4, 3679} -> 
   0.000437996, {4, 3716} -> 6.63223*10^-6, {4, 3718} -> 
   0.000074094, {4, 3719} -> 0.000108635, {4, 3926} -> 
   0.00281294, {4, 3941} -> -0.0000255457, {4, 
    3943} -> -0.000168647, {4, 3952} -> -0.000483615, {4, 3955} -> 
   0.000476095, {4, 3976} -> -0.0000829456, {4, 
    3977} -> -0.000263535, {4, 3994} -> 0.0022213, {4, 3995} -> 
   0.00222523, {4, 4016} -> 
   0.0000564314, {4, 4019} -> -0.000117126, {4, 4028} -> 
   0.000333015, {4, 4030} -> 0.000019551, {4, 4060} -> 
   0.000538436, {4, 4061} -> 0.000132073, {4, 4063} -> 
   0.000102811, {4, 4072} -> 
   0.000109464, {4, 4073} -> -0.000381691, {4, 4075} -> 
   0.000209894, {4, 4204} -> 0.000132073, {4, 4205} -> 
   0.0011782, {4, 4207} -> -0.000085122, {4, 4216} -> 
   0.000772941, {4, 4217} -> 
   0.000308561, {4, 4219} -> -0.000619008, {4, 
    4324} -> -0.00020367, {4, 4325} -> 0.000145124, {4, 4327} -> 
   0.00294563, {4, 4336} -> 0.00231747, {4, 4337} -> 
   0.00377243, {4, 4339} -> 0.0000478218, {4, 4350} -> 
   0.00840508, {4, 4362} -> 0.00125673, {4, 4492} -> 
   0.000102811, {4, 4493} -> -0.000085122, {4, 4495} -> 
   0.000276591, {4, 4504} -> -6.0386*10^-6, {4, 4505} -> 
   0.00014975, {4, 4507} -> -0.00012315, {4, 4640} -> 
   0.0100429, {4, 4642} -> 
   0.000902771, {4, 4643} -> -0.00083996, {4, 4652} -> 
   0.0000612816, {4, 4654} -> -0.00382873, {4, 
    4655} -> -0.00439225, {4, 4760} -> -0.000179843, {4, 
    4762} -> -0.000390973, {4, 4763} -> -0.000598126, {4, 
    4772} -> -0.000116134, {4, 4774} -> -0.000175841, {4, 
    4775} -> -0.000428801, {4, 4785} -> 0.000718011, {4, 4797} -> 
   0.000135907, {4, 4928} -> 0.000902771, {4, 4930} -> 
   0.000722911, {4, 4931} -> -0.000506468, {4, 
    4940} -> -0.0000783072, {4, 4942} -> 
   9.1775*10^-6, {4, 4943} -> -0.000538939, {4, 
    5072} -> -0.00083996, {4, 5074} -> -0.000506468, {4, 5075} -> 
   0.000934146, {4, 5084} -> -0.00048637, {4, 
    5086} -> -0.000045496, {4, 5087} -> 
   0.000337979, {4, 5186} -> -0.000246439, {4, 5187} -> 
   0.00549847, {4, 5260} -> 
   0.000231841, {4, 5261} -> -0.00212758, {4, 5263} -> 
   0.00105565, {4, 5300} -> 
   0.00206589, {4, 5302} -> -0.00229532, {4, 5303} -> 
   0.00233615, {4, 5342} -> -0.00033725, {4, 5343} -> 
   0.00443748, {4, 5404} -> -0.00144187, {4, 5405} -> 
   0.00365187, {4, 5407} -> -0.000202554, {4, 5444} -> 
   0.000141237, {4, 5446} -> 0.000191346, {4, 5447} -> 
   0.00036843, {4, 5499} -> 
   0.00240137, {4, 5525} -> -0.000289326, {4, 5527} -> 
   0.0000889842, {4, 5536} -> 0.000407237, {4, 5539} -> 
   0.000113785, {4, 5560} -> -0.0000412471, {4, 5561} -> 
   0.000142912, {4, 5578} -> 0.0000218759, {4, 5579} -> 
   0.000153355, {4, 5600} -> 0.00160743, {4, 5603} -> 
   0.000025945, {4, 5612} -> 0.00216702, {4, 5614} -> 
   0.000656066, {4, 5788} -> 0.000109464, {4, 5789} -> 
   0.000772941, {4, 5791} -> -6.0386*10^-6, {4, 5800} -> 
   0.000766653, {4, 5801} -> 
   0.000280106, {4, 5803} -> -0.000166368, {4, 
    5932} -> -0.000381691, {4, 5933} -> 0.000308561, {4, 5935} -> 
   0.00014975, {4, 5944} -> 0.000280106, {4, 5945} -> 
   0.000698319, {4, 5947} -> -0.000574066, {4, 
    6052} -> -0.000330507, {4, 6053} -> 
   0.00383361, {4, 6055} -> -0.00163687, {4, 6064} -> 
   0.00285456, {4, 6065} -> -0.0065282, {4, 
    6067} -> -0.0000721853, {4, 6078} -> 0.00125673, {4, 6090} -> 
   0.0162813, {4, 6220} -> 
   0.000209894, {4, 6221} -> -0.000619008, {4, 
    6223} -> -0.00012315, {4, 6232} -> -0.000166368, {4, 
    6233} -> -0.000574066, {4, 6235} -> 0.00830706, {4, 6368} -> 
   0.0000612816, {4, 6370} -> -0.0000783072, {4, 
    6371} -> -0.00048637, {4, 6380} -> 0.000728888, {4, 6382} -> 
   0.00041829, {4, 6383} -> -0.000267704, {4, 
    6488} -> -0.00347719, {4, 6490} -> 
   0.00302178, {4, 6491} -> -0.00317088, {4, 
    6500} -> -0.000182248, {4, 6502} -> -0.000228969, {4, 
    6503} -> -0.00064292, {4, 6513} -> 0.000135907, {4, 6525} -> 
   0.00861027, {4, 6656} -> -0.00382873, {4, 6658} -> 
   9.1775*10^-6, {4, 6659} -> -0.000045496, {4, 6668} -> 
   0.00041829, {4, 6670} -> 0.00514207, {4, 6671} -> 
   0.00380569, {4, 6800} -> -0.00439225, {4, 
    6802} -> -0.000538939, {4, 6803} -> 
   0.000337979, {4, 6812} -> -0.000267704, {4, 6814} -> 
   0.00380569, {4, 6815} -> 0.00547535, {4, 7633} -> 
   0.000216858, {4, 7644} -> -0.000515357, {4, 7659} -> 
   0.000407237, {4, 7670} -> -0.000483615, {4, 7696} -> 
   0.00497518, {4, 7699} -> 
   0.000087313, {4, 7738} -> -0.00189986, {4, 
    7739} -> -0.00166637, {4, 7760} -> -0.00050725, {4, 7763} -> 
   0.0000156676, {4, 7772} -> 0.00362738, {4, 7774} -> 
   0.00267701, {4, 7778} -> 0.000379947, {4, 7779} -> 
   0.000231841, {4, 7790} -> -0.000992313, {4, 
    7791} -> -0.00144187, {4, 7852} -> 
   0.00154705, {4, 7853} -> -0.000258507, {4, 
    7855} -> -0.000257132, {4, 7892} -> 
   0.0000349821, {4, 7894} -> -0.000166109, {4, 
    7895} -> -7.86912*10^-6, {4, 7921} -> -0.0000466878, {4, 
    7932} -> -0.000458107, {4, 7947} -> -0.0000412471, {4, 
    7958} -> -0.0000829456, {4, 8008} -> 0.000639187, {4, 8009} -> 
   0.000413197, {4, 8026} -> -0.00061267, {4, 8027} -> 
   0.000354039, {4, 8048} -> 
   0.000125932, {4, 8051} -> -4.53345*10^-6, {4, 
    8060} -> -0.0000412209, {4, 8062} -> 0.000563639, {4, 8120} -> 
   0.0152894, {4, 8122} -> 
   0.00180892, {4, 8123} -> -0.0130117, {4, 8132} -> 
   0.00771302, {4, 8134} -> 0.00305931, {4, 8135} -> 
   0.00359912, {4, 8156} -> -0.00139249, {4, 8158} -> 
   0.00102221, {4, 8159} -> -0.00120292, {4, 8265} -> 
   0.000247551, {4, 8277} -> 
   0.0000590391, {4, 8288} -> -0.0000243022, {4, 8290} -> 
   0.000167917, {4, 8291} -> 0.000136193, {4, 8301} -> 
   0.000499476, {4, 8408} -> 0.00180892, {4, 8410} -> 
   0.000637833, {4, 8411} -> -0.00182831, {4, 8420} -> 
   0.000825462, {4, 8422} -> 0.000296104, {4, 8423} -> 
   0.000425258, {4, 8444} -> -0.000121493, {4, 8446} -> 
   0.000114397, {4, 8447} -> -0.000068794, {4, 
    8552} -> -0.0130117, {4, 8554} -> -0.00182831, {4, 8555} -> 
   0.0136944, {4, 8564} -> -0.00538217, {4, 8566} -> -0.00346782, {4, 
    8567} -> -0.00547783, {4, 8588} -> 
   0.00061633, {4, 8590} -> -0.0010756, {4, 8591} -> 
   0.00194108, {4, 9217} -> -0.00025805, {4, 
    9228} -> -0.000179424, {4, 9243} -> -0.000289326, {4, 
    9254} -> -0.0000255457, {4, 9269} -> 
   0.00357325, {4, 9271} -> -0.00063821, {4, 
    9322} -> -0.000318211, {4, 9323} -> 
   0.00175478, {4, 9344} -> -0.00115945, {4, 9347} -> 
   0.000790804, {4, 9356} -> -0.00193275, {4, 
    9358} -> -0.000440926, {4, 9506} -> 
   0.000448614, {4, 9507} -> -0.00212758, {4, 
    9518} -> -0.00184337, {4, 9519} -> 
   0.00365187, {4, 9580} -> -0.000258507, {4, 9581} -> 
   0.00594352, {4, 9583} -> -0.00149787, {4, 
    9620} -> -0.000240244, {4, 9622} -> 
   0.000470095, {4, 9623} -> -0.000105669, {4, 
    9649} -> -0.000519693, {4, 9660} -> -0.000748066, {4, 9675} -> 
   0.000142912, {4, 9686} -> -0.000263535, {4, 9736} -> 
   0.000413197, {4, 9737} -> 
   0.00256064, {4, 9754} -> -0.000523318, {4, 9755} -> 
   0.000054051, {4, 9776} -> 0.00139949, {4, 9779} -> 
   0.000987513, {4, 9788} -> 
   0.000145285, {4, 9790} -> -0.000273868, {4, 9848} -> 
   0.00771302, {4, 9850} -> 
   0.000825462, {4, 9851} -> -0.00538217, {4, 9860} -> 
   0.00705435, {4, 9862} -> 0.0051476, {4, 9863} -> 
   0.00263488, {4, 9884} -> -0.00217095, {4, 9886} -> 
   0.000721954, {4, 9887} -> -0.000914741, {4, 9993} -> 
   0.0000590391, {4, 10005} -> 0.000748982, {4, 10016} -> 
   0.000578934, {4, 10018} -> -0.000577044, {4, 10019} -> 
   0.00036627, {4, 10029} -> -0.000357069, {4, 10136} -> 
   0.00305931, {4, 10138} -> 
   0.000296104, {4, 10139} -> -0.00346782, {4, 10148} -> 
   0.0051476, {4, 10150} -> 0.0128011, {4, 10151} -> 
   0.00370331, {4, 10172} -> -0.00304757, {4, 10174} -> 
   0.00221439, {4, 10175} -> -0.00219265, {4, 10280} -> 
   0.00359912, {4, 10282} -> 
   0.000425258, {4, 10283} -> -0.00547783, {4, 10292} -> 
   0.00263488, {4, 10294} -> 0.00370331, {4, 10295} -> 
   0.00610747, {4, 10316} -> -0.000960478, {4, 10318} -> 
   0.000905546, {4, 10319} -> -0.00238396, {4, 
    10968} -> -0.000176277, {4, 10969} -> -0.00132516, {4, 10980} -> 
   0.0000986658, {4, 10981} -> -0.00141269, {4, 10998} -> 
   0.00157203, {4, 11049} -> -0.0000106799, {4, 
    11073} -> -1.80762*10^-6, {4, 11085} -> -0.000128324, {4, 
    11112} -> -0.000593738, {4, 11113} -> -0.00192905, {4, 
    11124} -> -0.00170603, {4, 11125} -> 0.00287633, {4, 11154} -> 
   0.00494139, {4, 11193} -> -0.000338691, {4, 11217} -> 
   0.000106949, {4, 11229} -> -0.000260602, {4, 
    11400} -> -0.0014802, {4, 11401} -> -0.000485818, {4, 11412} -> 
   0.000581224, {4, 11413} -> 0.000274739, {4, 11466} -> 
   0.00533451, {4, 11481} -> 
   0.000033511, {4, 11505} -> -0.00215161, {4, 
    11517} -> -0.00201809, {4, 11577} -> -0.0000243022, {4, 11589} -> 
   0.000578934, {4, 11600} -> 
   0.00750348, {4, 11602} -> -0.0000446423, {4, 
    11603} -> -0.000297234, {4, 11613} -> -0.0000903672, {4, 11865} ->
    0.000167917, {4, 11877} -> -0.000577044, {4, 
    11888} -> -0.0000446423, {4, 11890} -> 0.00533181, {4, 11891} -> 
   0.00315267, {4, 11901} -> 0.00371842, {4, 12009} -> 
   0.000136193, {4, 12021} -> 
   0.00036627, {4, 12032} -> -0.000297234, {4, 12034} -> 
   0.00315267, {4, 12035} -> 0.00454799, {4, 12045} -> 
   0.00324433, {4, 12673} -> -0.000228172, {4, 12684} -> 
   0.0000525708, {4, 12699} -> 
   0.0000889842, {4, 12710} -> -0.000168647, {4, 
    12725} -> -0.00063821, {4, 12727} -> 
   0.000757096, {4, 12778} -> -4.43873*10^-6, {4, 
    12779} -> -0.00057511, {4, 12800} -> -0.000409537, {4, 12803} -> 
   0.000511961, {4, 12812} -> 0.000848876, {4, 12814} -> 
   0.0000733275, {4, 12817} -> -0.000489932, {4, 
    12828} -> -0.00063978, {4, 12843} -> 0.000113785, {4, 12854} -> 
   0.000476095, {4, 12880} -> 0.000087313, {4, 12883} -> 
   0.00245969, {4, 12922} -> 0.00164809, {4, 12923} -> 
   0.000815193, {4, 12944} -> -0.000198636, {4, 
    12947} -> -0.000631677, {4, 12956} -> 0.00086069, {4, 12958} -> 
   0.00120514, {4, 12962} -> -0.00146543, {4, 12963} -> 
   0.00105565, {4, 12974} -> 
   0.000437996, {4, 12975} -> -0.000202554, {4, 
    13036} -> -0.000257132, {4, 13037} -> -0.00149787, {4, 13039} -> 
   0.00447223, {4, 13076} -> 
   0.0000568562, {4, 13078} -> -0.00156681, {4, 
    13079} -> -0.00122624, {4, 13304} -> -0.00139249, {4, 
    13306} -> -0.000121493, {4, 13307} -> 
   0.00061633, {4, 13316} -> -0.00217095, {4, 
    13318} -> -0.00304757, {4, 13319} -> -0.000960478, {4, 13340} -> 
   0.00523195, {4, 13342} -> -0.00396815, {4, 13343} -> 
   0.00488703, {4, 13449} -> 
   0.000499476, {4, 13461} -> -0.000357069, {4, 
    13472} -> -0.0000903672, {4, 13474} -> 0.00371842, {4, 13475} -> 
   0.00324433, {4, 13485} -> 0.0110868, {4, 13592} -> 
   0.00102221, {4, 13594} -> 
   0.000114397, {4, 13595} -> -0.0010756, {4, 13604} -> 
   0.000721954, {4, 13606} -> 0.00221439, {4, 13607} -> 
   0.000905546, {4, 13628} -> -0.00396815, {4, 13630} -> 
   0.0049613, {4, 13631} -> -0.00560108, {4, 
    13736} -> -0.00120292, {4, 13738} -> -0.000068794, {4, 13739} -> 
   0.00194108, {4, 13748} -> -0.000914741, {4, 
    13750} -> -0.00219265, {4, 13751} -> -0.00238396, {4, 13772} -> 
   0.00488703, {4, 13774} -> -0.00560108, {4, 13775} -> 
   0.00737168, {4, 15122} -> 0.0000582465, {4, 15123} -> 
   0.00206589, {4, 15134} -> 6.63223*10^-6, {4, 15135} -> 
   0.000141237, {4, 15196} -> 
   0.0000349821, {4, 15197} -> -0.000240244, {4, 15199} -> 
   0.0000568562, {4, 15236} -> 
   0.00124424, {4, 15238} -> -0.000792575, {4, 15239} -> 
   0.000873792, {4, 15265} -> -0.000374977, {4, 15276} -> 
   0.000964633, {4, 15291} -> 0.00160743, {4, 15302} -> 
   0.0000564314, {4, 15317} -> -0.00115945, {4, 
    15319} -> -0.000409537, {4, 15328} -> -0.00050725, {4, 
    15331} -> -0.000198636, {4, 15352} -> 0.000125932, {4, 15353} -> 
   0.00139949, {4, 15392} -> 0.00442245, {4, 15395} -> 
   0.000333351, {4, 15409} -> 
   0.000345037, {4, 15420} -> -0.000832666, {4, 15435} -> 
   0.00216702, {4, 15446} -> 
   0.000333015, {4, 15461} -> -0.00193275, {4, 15463} -> 
   0.000848876, {4, 15472} -> 0.00362738, {4, 15475} -> 
   0.00086069, {4, 15496} -> -0.0000412209, {4, 15497} -> 
   0.000145285, {4, 15548} -> 0.00790744, {4, 15550} -> 
   0.00329562, {4, 16728} -> 0.000121597, {4, 16729} -> 
   0.000109501, {4, 16740} -> 0.0014113, {4, 16741} -> 
   0.0000410112, {4, 16758} -> -0.0000106799, {4, 
    16770} -> -0.000338691, {4, 16794} -> 0.000033511, {4, 16809} -> 
   0.00112849, {4, 17016} -> 0.000230649, {4, 17017} -> 
   0.000101747, {4, 17028} -> -0.000726454, {4, 17029} -> 
   0.0000376237, {4, 17046} -> -1.80762*10^-6, {4, 17058} -> 
   0.000106949, {4, 17082} -> -0.00215161, {4, 17121} -> 
   0.00203848, {4, 17160} -> 0.000364878, {4, 17161} -> 
   0.000320166, {4, 17172} -> 0.000834727, {4, 17173} -> 
   0.00027449, {4, 17190} -> -0.000128324, {4, 
    17202} -> -0.000260602, {4, 17226} -> -0.00201809, {4, 17277} -> 
   0.00212575, {4, 18433} -> 
   0.000954149, {4, 18444} -> -0.000198927, {4, 18459} -> 
   0.0000218759, {4, 18470} -> 
   0.0022213, {4, 18485} -> -0.000318211, {4, 
    18487} -> -4.43873*10^-6, {4, 18496} -> -0.00189986, {4, 18499} ->
    0.00164809, {4, 18520} -> -0.00061267, {4, 
    18521} -> -0.000523318, {4, 18538} -> 0.00511705, {4, 18539} -> 
   0.00151561, {4, 18578} -> 
   0.000160324, {4, 18579} -> -0.00229532, {4, 18590} -> 
   0.000074094, {4, 18591} -> 
   0.000191346, {4, 18652} -> -0.000166109, {4, 18653} -> 
   0.000470095, {4, 18655} -> -0.00156681, {4, 
    18692} -> -0.000792575, {4, 18694} -> 
   0.00259378, {4, 18695} -> -0.00128495, {4, 18865} -> 
   0.00137643, {4, 18876} -> -0.000646502, {4, 18891} -> 
   0.000656066, {4, 18902} -> 
   0.000019551, {4, 18917} -> -0.000440926, {4, 18919} -> 
   0.0000733275, {4, 18928} -> 0.00267701, {4, 18931} -> 
   0.00120514, {4, 18952} -> 
   0.000563639, {4, 18953} -> -0.000273868, {4, 19004} -> 
   0.00329562, {4, 19006} -> 
   0.00456689, {4, 20161} -> -0.000161954, {4, 
    20172} -> -0.000487445, {4, 20187} -> 0.000153355, {4, 20198} -> 
   0.00222523, {4, 20213} -> 
   0.00175478, {4, 20215} -> -0.00057511, {4, 
    20224} -> -0.00166637, {4, 20227} -> 0.000815193, {4, 20248} -> 
   0.000354039, {4, 20249} -> 0.000054051, {4, 20266} -> 
   0.00151561, {4, 20267} -> 0.00518773, {4, 20306} -> 
   0.000233248, {4, 20307} -> 0.00233615, {4, 20318} -> 
   0.000108635, {4, 20319} -> 
   0.00036843, {4, 20380} -> -7.86912*10^-6, {4, 
    20381} -> -0.000105669, {4, 20383} -> -0.00122624, {4, 20420} -> 
   0.000873792, {4, 20422} -> -0.00128495, {4, 20423} -> 
   0.0027204, {4, 20449} -> -0.000125653, {4, 20460} -> 
   0.00124115, {4, 20475} -> 
   0.000025945, {4, 20486} -> -0.000117126, {4, 20501} -> 
   0.000790804, {4, 20503} -> 0.000511961, {4, 20512} -> 
   0.0000156676, {4, 20515} -> -0.000631677, {4, 
    20536} -> -4.53345*10^-6, {4, 20537} -> 0.000987513, {4, 20576} ->
    0.000333351, {4, 20579} -> 0.00312163|>];
  answer = NCPoly[{12}, <|{0, 0} -> 0.757584, {3, 70} -> -0.0769231, {3, 92} -> 
   0.0769231, {3, 94} -> -0.0769231, {3, 95} -> 0.0769231, {3, 200} ->
    0.0769231, {3, 203} -> -0.0769231, {3, 212} -> 
   0.0769231, {3, 214} -> 0.0769231, {3, 215} -> 
   0.0769231, {3, 368} -> 
   0.0769231, {3, 514} -> -0.0769231, {3, 515} -> -0.0769231, {3, 
    525} -> -0.0769231|>];
  p2={NCPoly[{12}, <|{2, 4} -> -1, {2, 48} -> 1|>], 
 NCPoly[{12}, <|{2, 16} -> -1, {2, 49} -> 1|>], 
 NCPoly[{12}, <|{2, 28} -> -1, {2, 50} -> 1|>], 
 NCPoly[{12}, <|{2, 40} -> -1, {2, 51} -> 1|>], 
 NCPoly[{12}, <|{2, 5} -> -1, {2, 60} -> 1|>], 
 NCPoly[{12}, <|{2, 17} -> -1, {2, 61} -> 1|>], 
 NCPoly[{12}, <|{2, 29} -> -1, {2, 62} -> 1|>], 
 NCPoly[{12}, <|{2, 41} -> -1, {2, 63} -> 1|>], 
 NCPoly[{12}, <|{2, 6} -> -1, {2, 72} -> 1|>], 
 NCPoly[{12}, <|{2, 18} -> -1, {2, 73} -> 1|>], 
 NCPoly[{12}, <|{2, 30} -> -1, {2, 74} -> 1|>], 
 NCPoly[{12}, <|{2, 42} -> -1, {2, 75} -> 1|>], 
 NCPoly[{12}, <|{2, 7} -> -1, {2, 84} -> 1|>], 
 NCPoly[{12}, <|{2, 19} -> -1, {2, 85} -> 1|>], 
 NCPoly[{12}, <|{2, 31} -> -1, {2, 86} -> 1|>], 
 NCPoly[{12}, <|{2, 43} -> -1, {2, 87} -> 1|>], 
 NCPoly[{12}, <|{2, 8} -> -1, {2, 96} -> 1|>], 
 NCPoly[{12}, <|{2, 20} -> -1, {2, 97} -> 1|>], 
 NCPoly[{12}, <|{2, 32} -> -1, {2, 98} -> 1|>], 
 NCPoly[{12}, <|{2, 44} -> -1, {2, 99} -> 1|>], 
 NCPoly[{12}, <|{2, 56} -> -1, {2, 100} -> 1|>], 
 NCPoly[{12}, <|{2, 68} -> -1, {2, 101} -> 1|>], 
 NCPoly[{12}, <|{2, 80} -> -1, {2, 102} -> 1|>], 
 NCPoly[{12}, <|{2, 92} -> -1, {2, 103} -> 1|>], 
 NCPoly[{12}, <|{2, 9} -> -1, {2, 108} -> 1|>], 
 NCPoly[{12}, <|{2, 21} -> -1, {2, 109} -> 1|>], 
 NCPoly[{12}, <|{2, 33} -> -1, {2, 110} -> 1|>], 
 NCPoly[{12}, <|{2, 45} -> -1, {2, 111} -> 1|>], 
 NCPoly[{12}, <|{2, 57} -> -1, {2, 112} -> 1|>], 
 NCPoly[{12}, <|{2, 69} -> -1, {2, 113} -> 1|>], 
 NCPoly[{12}, <|{2, 81} -> -1, {2, 114} -> 1|>], 
 NCPoly[{12}, <|{2, 93} -> -1, {2, 115} -> 1|>], 
 NCPoly[{12}, <|{2, 10} -> -1, {2, 120} -> 1|>], 
 NCPoly[{12}, <|{2, 22} -> -1, {2, 121} -> 1|>], 
 NCPoly[{12}, <|{2, 34} -> -1, {2, 122} -> 1|>], 
 NCPoly[{12}, <|{2, 46} -> -1, {2, 123} -> 1|>], 
 NCPoly[{12}, <|{2, 58} -> -1, {2, 124} -> 1|>], 
 NCPoly[{12}, <|{2, 70} -> -1, {2, 125} -> 1|>], 
 NCPoly[{12}, <|{2, 82} -> -1, {2, 126} -> 1|>], 
 NCPoly[{12}, <|{2, 94} -> -1, {2, 127} -> 1|>], 
 NCPoly[{12}, <|{2, 11} -> -1, {2, 132} -> 1|>], 
 NCPoly[{12}, <|{2, 23} -> -1, {2, 133} -> 1|>], 
 NCPoly[{12}, <|{2, 35} -> -1, {2, 134} -> 1|>], 
 NCPoly[{12}, <|{2, 47} -> -1, {2, 135} -> 1|>], 
 NCPoly[{12}, <|{2, 59} -> -1, {2, 136} -> 1|>], 
 NCPoly[{12}, <|{2, 71} -> -1, {2, 137} -> 1|>], 
 NCPoly[{12}, <|{2, 83} -> -1, {2, 138} -> 1|>], 
 NCPoly[{12}, <|{2, 95} -> -1, {2, 139} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 0} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 13} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 26} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 39} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 52} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 65} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 78} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 91} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 104} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 117} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 130} -> 1|>], 
 NCPoly[{12}, <|{0, 0} -> -1, {2, 143} -> 1|>]};
  answer=NCPoly[{12}, <|{0, 0} -> 0.757584, {3, 70} -> -0.076923, {3, 92} -> 0.076923, {3, 94} -> -0.0769232, {3, 95} -> 0.0769231, {3, 200} -> 0.0769231, {3, 203} -> -0.0769231, {3, 212} -> 0.076923, {3, 214} -> 0.0769231, {3, 215} -> 0.0769231, {3, 368} -> 0.076923, {3, 514} -> -0.076923, {3, 515} -> -0.0769232, {3, 525} -> -0.0769232|>];
  NCTest[Chop[NCPolyReduce[p1,p2,Complete->True,ZeroTest -> (PossibleZeroQ[Chop[#, 10^(-7)]] &)] - answer, 10^(-6)], 0];

];
