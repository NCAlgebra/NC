<< NCPolyGroebner`

Module[
  {a,b,c,d,
  vars,
  f,g,graph,G,g1,g2,
  obs1,obs2,
  exp1,exp21,exp22,
  m,Invm,q2,q1,
  NCPolySFactors,
  NCPolySFactorExpand
  },

  NCPolySFactors = NCPolyGroebner`Private`NCPolySFactors;
  NCPolySFactorExpand = NCPolyGroebner`Private`NCPolySFactorExpand;
  
  (*Test Groebner *)

  (* TESTING S POLY -- BEGIN *)

  Clear[a,b,c,d];
  vars = {{a,b},{c},{d}};

  g1 = NCPolyMonomial[{c,d,c}, vars] + NCPolyMonomial[{d,a,d}, vars];
  g2 = NCPolyMonomial[{d,d,a}, vars];

  obs1 = NCPolySFactors[g1, g2];
  NCTest[obs1, { {{NCPolyMonomial[{d},vars], 1}, {1, NCPolyMonomial[{d},vars]}}, {{1, NCPolyMonomial[{d,a},vars]}, {NCPolyMonomial[{d,a},vars], 1}} }];
  (*
    Print["obs1 = ", obs1];
    Print["obs1 = ", obs1 /. HoldPattern[NCPoly[x___]] :> NCPolyDisplay[NCPoly[x]] ];
  *)

  Clear[a,b,c];
  vars = {{a},{b,c}};

  g1 = NCPolyMonomial[{a,a}, vars] + NCPolyMonomial[{b,b}, vars] + NCPolyMonomial[{c,c}, vars];
  g2 = NCPolyMonomial[{c}, vars];

  obs1 = NCPolySFactors[g1, g1];
  NCTest[obs1, {{ {NCPolyMonomial[{c},vars], 1}, {1, NCPolyMonomial[{c},vars]} }}];
  (* 
    Print["obs1 = ", obs1];
    Print["obs1 = ", obs1 /. HoldPattern[NCPoly[x___]] :> NCPolyDisplay[NCPoly[x]] ];
  *)

  obs2 = NCPolySFactors[g1, g2];
  NCTest[obs2, { {{1, 1}, {1, NCPolyMonomial[{c},vars]}}, {{1, 1}, {NCPolyMonomial[{c},vars], 1}} }];
  (*
    Print["obs2 = ", obs2];
    Print["obs2 = ", obs2 /. HoldPattern[NCPoly[x___]] :> NCPolyDisplay[NCPoly[x]] ];
  *)

  Clear[a, b];
  vars = {{a, b}};

  g1 = NCPolyMonomial[{a, b, a}, vars] - NCPolyMonomial[{b}, vars];
  g2 = NCPolyMonomial[{b, a, b}, vars] - NCPolyMonomial[{b}, vars];

  obs1 = NCPolySFactors[g1, g1];
  NCTest[obs1, {{ {NCPolyMonomial[{a,b},vars], 1}, {1, NCPolyMonomial[{b,a},vars]} }}];

  obs2 = NCPolySFactors[g1, g2];
  NCTest[obs2, { {{NCPolyMonomial[{b},vars], 1}, {1, NCPolyMonomial[{a},vars]}}, {{1, NCPolyMonomial[{b},vars]}, {NCPolyMonomial[{a},vars], 1}}}];

  exp1 = NCPolySFactorExpand[Part[obs1, 1], NCPolyLeadingMonomial[g1], NCPolyLeadingMonomial[g1]];
  NCTest[exp1, {NCPolyMonomial[{a,b,a,b,a},vars], NCPolyMonomial[{a,b,a,b,a},vars]} ];

  exp21 = NCPolySFactorExpand[Part[obs2, 1], NCPolyLeadingMonomial[g1], NCPolyLeadingMonomial[g2]];
  NCTest[exp21, {NCPolyMonomial[{b,a,b,a},vars], NCPolyMonomial[{b,a,b,a},vars]}];

  exp22 = NCPolySFactorExpand[Part[obs2, 2], NCPolyLeadingMonomial[g1], NCPolyLeadingMonomial[g2]];
  NCTest[exp22, {NCPolyMonomial[{a,b,a,b},vars], NCPolyMonomial[{a,b,a,b},vars]}];

  (* TESTING S POLY -- END *)

  (* TESTING GROEBNER PROBLEM # 1 -- BEGIN *)

  g = {g1, g2};
  {G,graph} = NCPolyGroebner[g, 12, VerboseLevel -> 0];

  NCTest[Map[NCPolyGetCoefficients,G], 
       {{-1,1},{-1,1},{-1,1}}];
  NCTest[Map[NCPolyGetIntegers,G], 
       {{{2, 2}, {2, 3}}, {{2, 1}, {2, 2}}, {{1, 1}, {3, 1}}} ];

  G = FixedPoint[NCPolyReduce, G, 10];

  NCTest[Map[NCPolyGetCoefficients,G], 
       {{-1,1},{-1,1},{-1,1}}];
  NCTest[Map[NCPolyGetIntegers,G], 
       {{{2, 2}, {2, 3}}, {{2, 1}, {2, 2}}, {{1, 1}, {3, 1}}} ];

  (* TESTING GROEBNER PROBLEM # 1 -- END *)

  (* TESTING GROEBNER PROBLEM # 2 -- BEGIN *)

  Clear[m, Invm, q2, q1, m, f, a];
  vars = {{Invm, q2, q1, m, f, a}};

  g = { 
  NCPolyMonomial[{Invm, m}, vars] - 1, 
  NCPolyMonomial[{m, Invm}, vars] - 1, 
  NCPolyMonomial[{a, m}, vars] - NCPolyMonomial[{m, f}, vars] 
    - NCPolyMonomial[{q1, q2}, vars] 
  };

  {G,graph} = NCPolyGroebner[g, 12, VerboseLevel -> 0];
  NCTest[Map[NCPolyGetCoefficients,G], 
       {{-1,1},{-1,1},{-1,-1,1},{-1,1,1},{-1,1,1},{-1,1,1,1}}];
  NCTest[Map[NCPolyGetIntegers,G], 
       {{{0, 0}, {2, 3}}, {{0, 0}, {2, 18}}, {{2, 13}, {2, 22}, {2, 33}}, {{1, 5}, {3, 78}, {3, 132}}, {{2, 5}, {2, 24}, {4,78}}, {{2, 35}, {4, 492}, {4, 816}, {4, 1158}}} ];

];