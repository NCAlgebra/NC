(*
 * NCMakeGB.test
 *
 * Author: Mauricio de Oliveira 
 *   Date: 12/01/2009
 *)

Clear[NCMakeGBTest];
NCMakeGBTest[filename_String,
             referenceDirectory_String,
             resultDirectory_String,
	     opts___:{}] := Module[
   {outRels, outRules, outFile, cmpFile, cmpRels, resultFile,
    outRR, interrupted, diff},

   Print["> Testing file '", filename, "'"];
   Clear[rels];

   (* Set default number of iterations 
    * User may override by setting Iterations inside test file *)
   Iterations = 6;

   (* Set if interrupted or not
    * User may override by setting Interrupted inside test file *)
   Interrupted = False;

   (* Load test problem *)
   Get[ToFileName[referenceDirectory, filename]];

   (* Print["rels = ", rels]; *)

   (* Calls NCMakeGB *)
   interrupted = False;
   Quiet[
     Check[ outRels = Sort[NCMakeGB[rels, Iterations,
                                    opts, ReduceBasis -> True]];
           ,
	    interrupted = True;
	   ,
	    NCPolyGroebner::Interrupted
     ];
    ,
     NCPolyGroebner::Interrupted
   ];

   (* Load reference answer *)
   cmpFile = ToFileName[referenceDirectory,
                        StringReplace[filename, ".data.m" -> ".out.GB" ] ];
   Print["> Comparing result to reference in ", cmpFile];
   cmpRels = Sort[Get[cmpFile]];

   (* Compare and write diagnostics if it failed *)
   diff = NCExpand[(outRels /. Rule -> Subtract) - (cmpRels /. Rule -> Subtract)];
   NCTest[If[diff != {}, Norm[diff], 0], 0];
   NCTest[interrupted, Interrupted];

   (* Generate result file *)
   If[ resultDirectory =!= "",
     resultFile = ToFileName[resultDirectory, 
     		             StringReplace[filename, ".data.m" -> ".out.GB"]];
     Print["> Saving result in ", resultFile];
     stmp = OpenWrite[resultFile];
     WriteString[stmp, "(*\n"];
     WriteString[stmp, " * File produced by NCGBTEST on:\n"];
     WriteString[stmp, " * " <> DateString[] <> "\n"];
     WriteString[stmp, " *)\n\n"];
     Close[stmp];
     PutAppend[outRels, resultFile];
   ];

];

NCMakeGBRunTests[testset_, resultDirectory_String:"", opts___:{}] := Module[
  {$NCGB$ReferenceDirectory = ToFileName["NCPoly", "TestProblems"],
   $NCGB$BaseDirectory,
   $NCGB$TestProblems,
   verboseLevel = 1},
  
  (* Perform tests *)

  $NCGB$BaseDirectory = DirectoryName[
    FindFile["NCPOLYTESTGB`"]
  ];
  $NCGB$ReferenceDirectory = ToFileName[$NCGB$BaseDirectory,
                                        $NCGB$ReferenceDirectory];

  (* Print["> TESTING REFERENCE DIRECTORY ", $NCGB$ReferenceDirectory]; *)

  $NCGB$TestProblems = Map[ 
    If[# < 10, StringJoin["c0", ToString[#], ".data.m"], 
	       StringJoin["c", ToString[#], ".data.m"]] &, 
    Intersection[
      ToExpression[
	Flatten[Map[StringCases[#, DigitCharacter ..] &,
	            Map[FileNameTake,
		        FileNames[All, $NCGB$ReferenceDirectory]]]]
      ],
      testset
    ]
  ];

  (* Print["> TEST SET ", $NCGB$TestProblems]; *)

  Map[NCMakeGBTest[#,$NCGB$ReferenceDirectory,
		     resultDirectory,
		     opts]&, 
      $NCGB$TestProblems];

];

testset = Range[0,88];
(* testset = Range[0,3]; *)

NCMakeGBRunTests[testset, VerboseLevel -> 1];
