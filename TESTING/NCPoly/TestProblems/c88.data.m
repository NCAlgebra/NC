(* Eric's long run with old version of the algorithm that required 
 clean up base *)

SetNonCommutative[z1, z2, w, h];
SetMonomialOrder[z1, z2, w, h];
Clear[c0, c1, c2];

rels={
    w ** z2 -> 1/c2 - (c0 w)/c2 - (c1 w ** z1)/c2, 
    z2 ** w -> 1/c2 - (c0 w)/c2 - (c1 z1 ** w)/c2, 
    z1 ** z2 ** z1 -> c0^3/(c2 (-1 - c1^2 + c2^2)) + (3 c0^2 c1 z1)/(
c2 (-1 - c1^2 + c2^2)) - (c0^2 z2)/(1 + c1^2 - c2^2) - (
c0 (1 - 3 c1^2 + c2^2) z1 ** z1)/(c2 (-1 - c1^2 + c2^2)) - (
c0 c1 z1 ** z2)/(1 + c1^2 - c2^2) - (c0 c1 z2 ** z1)/(
1 + c1^2 - c2^2) + (c1 (-1 + c1^2 - c2^2) z1 ** z1 ** z1)/(
c2 (-1 - c1^2 + c2^2)), 
    z1 ** z2 ** z2 -> -((c0^3 c1)/(c2^2 (1 + c1^2 - c2^2))) - (c0^3 c1)/(
c2^2 (-1 - c1^2 + 
c2^2)) + (-((3 c0^2 c1^2)/(c2^2 (-1 - c1^2 + c2^2))) - (
c0^2 (-3 c1^2 + c2^2))/(c2^2 (-1 - c1^2 + c2^2))) z1 + ((
c0^2 c1)/(c2 (1 + c1^2 - c2^2)) + (2 c0^2 c1)/(
c2 (-1 - c1^2 + c2^2))) z2 + (-((c0 c1 (-1 + 3 c1^2 - 2 c2^2))/(
c2^2 (1 + c1^2 - c2^2))) + (c0 c1 (1 - 3 c1^2 + c2^2))/(
c2^2 (-1 - c1^2 + c2^2))) z1 ** 
    z1 + ((c0 c1^2)/(c2 (1 + c1^2 - c2^2)) - (c0 (-3 c1^2 + 2 c2^2))/(
c2 (-1 - c1^2 + c2^2))) z1 ** 
    z2 + ((c0 c1^2)/(c2 (1 + c1^2 - c2^2)) + (c0 c1^2)/(
c2 (-1 - c1^2 + c2^2))) z2 ** z1 - (c0 c1 z2 ** z2)/(
1 + c1^2 - 
c2^2) + (-((c1^2 (-1 + c1^2 - c2^2))/(c2^2 (1 + c1^2 - c2^2))) - (
c1^2 (-1 + c1^2 - c2^2))/(c2^2 (-1 - c1^2 + c2^2))) z1 ** z1 ** 
    z1 + (c1 (-1 + c1^2 - c2^2) z1 ** z1 ** z2)/(
c2 (-1 - c1^2 + c2^2)), 
    z2 ** z2 ** z1 -> -((c0^3 c1)/(c2^2 (1 + c1^2 - c2^2))) - (c0^3 c1)/(
c2^2 (-1 - c1^2 + 
c2^2)) + (-((3 c0^2 c1^2)/(c2^2 (-1 - c1^2 + c2^2))) - (
c0^2 (-3 c1^2 + c2^2))/(c2^2 (-1 - c1^2 + c2^2))) z1 + ((
c0^2 c1)/(c2 (1 + c1^2 - c2^2)) + (2 c0^2 c1)/(
c2 (-1 - c1^2 + c2^2))) z2 + (-((c0 c1 (-1 + 3 c1^2 - 2 c2^2))/(
c2^2 (1 + c1^2 - c2^2))) + (c0 c1 (1 - 3 c1^2 + c2^2))/(
c2^2 (-1 - c1^2 + c2^2))) z1 ** 
    z1 + ((c0 c1^2)/(c2 (1 + c1^2 - c2^2)) + (c0 c1^2)/(
c2 (-1 - c1^2 + c2^2))) z1 ** 
    z2 + ((c0 c1^2)/(c2 (1 + c1^2 - c2^2)) - (c0 (-3 c1^2 + 2 c2^2))/(
c2 (-1 - c1^2 + c2^2))) z2 ** z1 - (c0 c1 z2 ** z2)/(
1 + c1^2 - 
c2^2) + (-((c1^2 (-1 + c1^2 - c2^2))/(c2^2 (1 + c1^2 - c2^2))) - (
c1^2 (-1 + c1^2 - c2^2))/(c2^2 (-1 - c1^2 + c2^2))) z1 ** z1 ** 
    z1 + (c1 (-1 + c1^2 - c2^2) z2 ** z1 ** z1)/(
c2 (-1 - c1^2 + c2^2)), 
    z2 ** z2 ** z2 -> -(c0^3/(c2 (-1 - c1^2 + c2^2))) - (c0^2 c1 z1)/(
c2 (-1 - c1^2 + c2^2)) + (3 c0^2 z2)/(1 + c1^2 - c2^2) + (
c0 c1 z1 ** z2)/(1 + c1^2 - c2^2) + (c0 c1 z2 ** z1)/(
1 + c1^2 - c2^2) - (c0 (-1 - c1^2 + 3 c2^2) z2 ** z2)/(
c2 (-1 - c1^2 + c2^2)) + (c1 (-1 + c1^2 - c2^2) z2 ** z1 ** z2)/(
c2 (-1 - c1^2 + c2^2))
     } /. Rule -> Subtract;

(* rels = rels[[1;;3]]; *)
