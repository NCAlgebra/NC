(*************************************************************************
 *         This file was automatically generated by md2usage.py          *
 *                   on 2022-03-09 12:52:17.943074                       *
 *************************************************************************)


(* NCLUDecompositionWithPartialPivoting *)
NCLUDecompositionWithPartialPivoting::usage = "\
NCLUDecompositionWithPartialPivoting is a noncommutative version of NCLUDecompositionWithPartialPivoting.

The following options can be given:

-   ZeroTest (PossibleZeroQ): function used to decide if a pivot is zero;
-   RightDivide (NCRightDivide): function used to divide a vector by an entry;
-   Dot (NCDot): function used to multiply vectors and matrices;
-   Pivoting (NCLUPartialPivoting): function used to sort rows for pivoting;
-   SuppressPivoting (False): whether to perform pivoting or not.

See also: LUDecompositionWithPartialPivoting.";

(* NCLUDecompositionWithCompletePivoting *)
NCLUDecompositionWithCompletePivoting::usage = "\
NCLUDecompositionWithCompletePivoting is a noncommutative version of NCLUDecompositionWithCompletePivoting.

The following options can be given:

-   ZeroTest (PossibleZeroQ): function used to decide if a pivot is zero;
-   RightDivide (NCRightDivide): function used to divide a vector by an entry;
-   Dot (NCDot): function used to multiply vectors and matrices;
-   Pivoting (NCLUCompletePivoting): function used to sort rows for pivoting;
-   SuppressPivoting (False): whether to perform pivoting or not.

See also: LUDecompositionWithCompletePivoting.";

(* NCLDLDecomposition *)
NCLDLDecomposition::usage = "\
NCLDLDecomposition is a noncommutative version of LDLDecomposition.

The following options can be given:

-   ZeroTest (PossibleZeroQ): function used to decide if a pivot is zero;
-   RightDivide (NCRightDivide): function used to divide a vector by an entry on the right;
-   LeftDivide (NCLeftDivide): function used to divide a vector by an entry on the left;
-   Dot (NCDot): function used to multiply vectors and matrices;
-   CompletePivoting (NCLUCompletePivoting): function used to sort rows for complete pivoting;
-   PartialPivoting (NCLUPartialPivoting): function used to sort matrices for complete pivoting;
-   Inverse (NCLUInverse): function used to invert 2x2 diagonal blocks;
-   SelfAdjointMatrixQ (NCSelfAdjointQ): function to test if matrix is self-adjoint;
-   SuppressPivoting (False): whether to perform pivoting or not.

See also: LUDecompositionWithCompletePivoting.";

(* NCUpperTriangularSolve *)
NCUpperTriangularSolve::usage = "\
NCUpperTriangularSolve is a noncommutative version of UpperTriangularSolve.

See also: UpperTriangularSolve.";

(* NCLowerTriangularSolve *)
NCLowerTriangularSolve::usage = "\
NCLowerTriangularSolve is a noncommutative version of LowerTriangularSolve.

See also: LowerTriangularSolve.";

(* NCLUInverse *)
NCLUInverse::usage = "\
NCLUInverse is a noncommutative version of LUInverse.

See also: LUInverse.";

(* NCLUPartialPivoting *)
NCLUPartialPivoting::usage = "\
NCLUPartialPivoting is a noncommutative version of LUPartialPivoting.

See also: LUPartialPivoting.";

(* NCLUCompletePivoting *)
NCLUCompletePivoting::usage = "\
NCLUCompletePivoting is a noncommutative version of LUCompletePivoting.

See also: LUCompletePivoting.";

(* NCLeftDivide *)
NCLeftDivide::usage = "\
NCLeftDivide[x,y] divides each entry of the list y by x on the left.

For example:

    NCLeftDivide[x, {a,b,c}]

returns

    {inv[x]**a, inv[x]**b, inv[x]**c}

See also: NCRightDivide.";

(* NCRightDivide *)
NCRightDivide::usage = "\
NCRightDivide[x,y] divides each entry of the list x by y on the right.

For example:

    NCRightDivide[{a,b,c}, y]

returns

    {a**inv[y], b**inv[y], c**inv[y]}

See also: NCLeftDivide.";
