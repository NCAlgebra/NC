(* 

The program returns a list of n character string which 
are either "TRUE","UNKNOWN" or "FALSE". If
the $j$th element is "TRUE", then 
aListOfPolynomials[[j]] is a member of the ideal
generated by Join[Take[aListOfPolynomials,{1,j-1}],
keep]. If the $j$th element is "FALSE", then
aListOfPolynomials[[j]] is NOT a member of the ideal 
generated by Join[Take[aListOfPolynomials,{1,j-1}], 
keep]. If the $j$th element is "UNKNOWN", then
the program can not determine whether or 
not aListOfPolynomials[[j]] is a member of the ideal  
generated by Join[Take[aListOfPolynomials,{1,j-1}],  
keep] or not.

Right now, the program never returns
any "TRUE"s.

*)

MembershipTestMonomialIdeal[aListOfPolynomials_List,keep_List] :=
Module[{bigList,result,withConstant,withoutConstant,
        monos,relev,gen,index,Len,reduced},
  Len = Length[aListOfPolynomials];
  result = Table["UNKNOWN"
                 ,{i,1,Len}];
  accumulate = {};
  Do[ relev = VariableClosure[{aListOfPolynomial[[j]]},
                              Join[accumulate,keep]
                             ];
      bigList = Complement[relev,{aListOfPolynomial[[j]]}];
      withConstant = GrabWithConstant[bigList];
      withoutConstant = GrabWithoutConstant[bigList];
      monos = Map[MonomialsOf,withoutConstant];
      gen = Union[mono,withConstant];
      NCMakeGB[gen,2,ReturnRelations->False];
      Do[ If[result[[k]]==="UNKNOWN"
             , reduced = Reduce`FastReduction[aListOfPolynomials[[k]]];
               If[FoundBasis[]===1
                   , If[Not[reduced==={0}]
                         , result[[k]] = "FALSE";
                     ];
               ];
          ];
      ,{k,j,Len}];
  ,{j,1,Len}];
  Return[result];
];
